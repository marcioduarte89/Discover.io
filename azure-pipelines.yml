# ASP.NET Core


# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

variables:
  buildConfiguration: 'Release'

stages:
- stage: Infra
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: Infra
    displayName: Infrastructure install
    steps:
      - task: gitversion/setup@0
        displayName: Setup Gitversion
        inputs:
          versionSpec: '5.0.0'

- stage: Build
  pool:
    vmImage: ubuntu-latest
  jobs:
    - job: Build
      displayName: Build Solution
      steps:
      - script: dotnet build --configuration $(buildConfiguration)
        displayName: 'Dotnet Build $(buildConfiguration)'

- stage: Tests
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: Tests
    displayName: Run unit tests
    steps:
      - task: DotNetCoreCLI@2
        displayName: Run Unit Tests
        inputs:
          command: test
          arguments: '--configuration $(buildConfiguration) --no-build'
          projects: '**/*Tests/*.csproj'  

- stage: Package_And_Release
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: Package_And_Push
    displayName: Package & Push
    steps:
      - task: DotNetCoreCLI@2
        displayName: "Nuget pack Discoverio Client"
        inputs:
          command: 'pack'
          packagesToPack: '**/Discoverio.Client.csproj'
          nobuild: true
          packDirectory: '$(Build.ArtifactStagingDirectory)'
          includesymbols: true
          versioningScheme: off
          versionEnvVar: 'GitVersion.NuGetVersion'
      - task: DotNetCoreCLI@2
        displayName: Nuget pack Discoverio Server
        inputs:
          command: 'pack'
          packagesToPack: '**/Discoverio.Server.csproj'
          nobuild: true
          packDirectory: '$(Build.ArtifactStagingDirectory)'
          includesymbols: true
          versioningScheme: off
          versionEnvVar: 'GitVersion.NuGetVersion'
      - task: NuGetCommand@2
        displayName: Nuget push to Nuget.org
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
          nuGetFeedType: 'external'
          publishFeedCredentials: 'Nuget.org'
          verbosityPush: 'Normal'
  - job: Release
    displayName: Release
    steps:
      - task: GitHubRelease@1
        displayName: Release
        inputs:
          gitHubConnection: 'github.com_marcioduarte89'
          repositoryName: 'marcioduarte89/Discover.io'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'userSpecifiedTag'
          tag: '$(GitVersion.NuGetVersion)'
          changeLogCompareToRelease: 'lastFullRelease'
          changeLogType: 'commitBased'